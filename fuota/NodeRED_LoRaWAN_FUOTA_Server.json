[{"id":"81bd34be2fa46898","type":"tab","label":"FUOTA","disabled":false,"info":"","env":[]},{"id":"d46250c174bae9b0","type":"comment","z":"81bd34be2fa46898","name":"PackageVersionReq  command (0x00)","info":"","x":370,"y":140,"wires":[]},{"id":"ecfbf2027a239f8e","type":"ui_text","z":"81bd34be2fa46898","d":true,"group":"f347512d0d6e3295","order":2,"width":0,"height":0,"name":"","label":"Command","format":"{{msg.payload}}","layout":"col-center","className":"","x":690,"y":180,"wires":[]},{"id":"e329873d4d9fffa8","type":"ui_template","z":"81bd34be2fa46898","d":true,"group":"f347512d0d6e3295","name":"Info","order":1,"width":0,"height":0,"format":"<!DOCTYPE html>\n<html>\n<!--<head>-->\n<!--\t<title>Hello</title>-->\n\n<!--\t<h1>Hello World</h1>-->\n<!--</head>-->\n<body>\n    \n<p><em>Payload is fixed</em></p>\n\n</body>\n</html>\n","storeOutMessages":false,"fwdInMessages":false,"resendOnRefresh":false,"templateScope":"local","className":"","x":270,"y":180,"wires":[[]]},{"id":"05521c888e40e495","type":"inject","z":"81bd34be2fa46898","name":"00","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"00","payloadType":"str","x":430,"y":180,"wires":[["ecfbf2027a239f8e"]]},{"id":"3c360c84f0975fa5","type":"comment","z":"81bd34be2fa46898","name":"DevVersionReq command (0x01)","info":"","x":350,"y":260,"wires":[]},{"id":"3fc0daa6235672a2","type":"ui_text","z":"81bd34be2fa46898","d":true,"group":"7aa3ceccb60a7961","order":2,"width":0,"height":0,"name":"","label":"Command","format":"{{msg.payload}}","layout":"col-center","className":"","x":730,"y":300,"wires":[]},{"id":"8735b50097ef18b0","type":"ui_template","z":"81bd34be2fa46898","d":true,"group":"7aa3ceccb60a7961","name":"Info","order":1,"width":0,"height":0,"format":"<!DOCTYPE html>\n<html>\n<!--<head>-->\n<!--\t<title>Hello</title>-->\n\n<!--\t<h1>Hello World</h1>-->\n<!--</head>-->\n<body>\n    \n<p><em>Payload is fixed</em></p>\n\n</body>\n</html>\n","storeOutMessages":false,"fwdInMessages":false,"resendOnRefresh":false,"templateScope":"local","className":"","x":270,"y":300,"wires":[[]]},{"id":"9ff279f315942d7d","type":"inject","z":"81bd34be2fa46898","name":"01","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"01","payloadType":"str","x":430,"y":300,"wires":[["3fc0daa6235672a2"]]},{"id":"aa02d0378a1ddcc5","type":"comment","z":"81bd34be2fa46898","name":"DevRebootTimeReq (0x02)","info":"","x":330,"y":380,"wires":[]},{"id":"70dc63c8e324dda5","type":"ui_form","z":"81bd34be2fa46898","name":"DevRebootTimeReq","label":"","group":"54f20a3bf36f1681","order":1,"width":0,"height":0,"options":[{"label":"Reboot time (date)","value":"Time_date","type":"date","required":false,"rows":null},{"label":"Reboot time (time)","value":"Time_time","type":"time","required":false,"rows":null},{"label":"Reboot as soon as possible","value":"asap","type":"checkbox","required":false,"rows":null},{"label":"Cancel the currently programmed reboot","value":"cancel","type":"checkbox","required":false,"rows":null}],"formValue":{"Time_date":"","Time_time":"","asap":false,"cancel":false},"payload":"","submit":"Create command","cancel":"Cancel","topic":"topic","topicType":"msg","splitLayout":true,"className":"","x":320,"y":420,"wires":[["a712551d7d47fa07"]]},{"id":"a712551d7d47fa07","type":"function","z":"81bd34be2fa46898","name":"DevRebootTimeReq","func":"/*\n* Title:    FUOTA LoRaWAN command: DevRebootTimeReq\n* Autor:    Antoine AUGAGNEUR\n* Date:     may, 2022\n* Sources:  > LoRaWAN® Firmware Management Protocol Specification TS006-1.0.0\n*\n*                                          \n*/\n\n// Get data form\nvar ASAP = msg.payload.asap;\nvar Cancel = msg.payload.cancel;\nvar rebootdate = msg.payload.Time_date;\nvar reboottime = msg.payload.Time_time;\n\n// Data interpretation and error handling\nvar TimeDate = Boolean((rebootdate != null) && (reboottime != null));           // true: Reboot-Date&Time correctly setup\nvar TimeDate1over2 = Boolean( ((rebootdate !=null) && (reboottime == null))     // true: One over 2 is crossed\n                            || (rebootdate == null && (reboottime != null)))\n\n// RebootTime (4-bytes)\nif ((TimeDate && ASAP) || (TimeDate && Cancel) || (TimeDate1over2 && ASAP) || (TimeDate1over2 && Cancel)){\n    msg.command = \"Error\"\n    return msg;\n}\nelse if (ASAP && !Cancel){\n    msg.command = \"0200000000\"\n    return msg;\n}\nelse if (Cancel && !ASAP){\n    msg.command = \"02FFFFFFFF\"\n    return msg;\n}\nelse if (TimeDate){\n    //  ## Date calculation\n    // GPS origin\n    var Origin = new Date('1980-01-06 00:00:00');\n    // Desired date\n    var Desired_date = Date.parse(rebootdate);        // Y, M, D // \"parse\" turns the date into the number of ms passed since 1970-01-01.\n    var Desired_time = Date.parse(reboottime);        // H, M\n    \n    // Difference calculation\n    var offset_time = Date.parse('1970-01-01 00:00:00');\n    var Desired = Desired_date + Desired_time - offset_time - Origin;   // time ( = hours and minuts) is set with an offset of 1970-01-01. So, I take the offset away.\n    Desired=Desired+7200000;    // 2 hours are added to synch with our time (UTC+01). Added twice because there are a Date(Y,M,D) setup AND a time (H,M) setup.\n    Desired=Desired+3600000;    // because of the time change in france\n    var Diff = Desired/1000;      // difference in seconds\n    \n    // RebootTime build\n    var RebootTime = (\"00000000\" + (parseInt(Diff,10).toString(16))).substr(-8);\n    // var RebootTime = Diff.toString(16);       // hex to string conversion\n    var RebootTime_le = RebootTime[6]        // little endian conversion\n                        + RebootTime[7]\n                        + RebootTime[4]\n                        + RebootTime[5]\n                        + RebootTime[2]\n                        + RebootTime[3]\n                        + RebootTime[0]\n                        + RebootTime[1];\n    // RebootTime_le = Buffer.from(RebootTime_le, 'hex');\n    \n    msg.command = \"02\" + RebootTime_le;\n    msg.debug_time = Diff;\n    return msg;\n}\n\n\n\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":540,"y":420,"wires":[["8399df2a47bd7c1e","6bb76bc3336559de"]]},{"id":"8399df2a47bd7c1e","type":"ui_text","z":"81bd34be2fa46898","group":"54f20a3bf36f1681","order":2,"width":0,"height":0,"name":"","label":"Command","format":"{{msg.command}}","layout":"col-center","className":"","x":770,"y":420,"wires":[]},{"id":"6bb76bc3336559de","type":"debug","z":"81bd34be2fa46898","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"debug_time","targetType":"msg","statusVal":"","statusType":"auto","x":790,"y":380,"wires":[]},{"id":"8bacbc8b78e029f5","type":"comment","z":"81bd34be2fa46898","name":"DevRebootCountdownReq (0x03)","info":"","x":350,"y":500,"wires":[]},{"id":"ea8296b28910c234","type":"ui_form","z":"81bd34be2fa46898","name":"DevRebootCountdownReq","label":"","group":"4d16af22a6324b77","order":1,"width":0,"height":0,"options":[{"label":"Reboot Countdown (in sec, max: 16.777.214)","value":"countdown","type":"text","required":false,"rows":null},{"label":"Reboot as soon as possible","value":"asap","type":"checkbox","required":false,"rows":null},{"label":"Cancel the currently programmed reboot","value":"cancel","type":"checkbox","required":false,"rows":null}],"formValue":{"countdown":"","asap":false,"cancel":false},"payload":"","submit":"Create command","cancel":"Cancel","topic":"topic","topicType":"msg","splitLayout":true,"className":"","x":340,"y":540,"wires":[["a520dfdb1d1add28"]]},{"id":"a520dfdb1d1add28","type":"function","z":"81bd34be2fa46898","name":"DevRebootCountdownReq","func":"/*\n* Title:    FUOTA LoRaWAN command: DevRebootCountdownReq\n* Autor:    Antoine AUGAGNEUR\n* Date:     may, 2022\n* Sources:  > LoRaWAN® Firmware Management Protocol Specification TS006-1.0.0\n*\n*                                          \n*/\n\n// Get data form\nvar ASAP = msg.payload.asap;\nvar Cancel = msg.payload.cancel;\nvar CountDown = msg.payload.countdown;\n\n// Data interpretation and error handling\nvar CDok = Boolean((CountDown!=null) && (parseInt(CountDown,10) <= 16777214));                   // true: Countdown is ok\n\n// RebootTime (4-bytes)\nif ((CDok && ASAP) || (CDok && Cancel) || (!CDok && !ASAP && !Cancel)){\n    msg.command = \"Error\"\n    return msg;\n}\nelse if (ASAP && !Cancel){\n    msg.command = \"03000000\"\n    return msg;\n}\nelse if (Cancel && !ASAP){\n    msg.command = \"03FFFFFF\"\n    return msg;\n}\nelse if (CDok){\n    \n    var CountDownHEX = (\"000000\" + (parseInt(CountDown,10).toString(16))).substr(-6);\n\n    var CountDownHEX_le = CountDownHEX[4]     // little endian conversion\n                        + CountDownHEX[5]\n                        + CountDownHEX[2]\n                        + CountDownHEX[3]\n                        + CountDownHEX[0]\n                        + CountDownHEX[1];\n    // RebootTime_le = Buffer.from(RebootTime_le, 'hex');\n    \n    msg.command = \"03\" + CountDownHEX_le;\n    msg.debug_time = CountDown;\n    return msg;\n}\n\n\n\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":600,"y":540,"wires":[["7eefe1044c3125ec","6ce8c9dc849ab490"]]},{"id":"7eefe1044c3125ec","type":"ui_text","z":"81bd34be2fa46898","group":"4d16af22a6324b77","order":2,"width":0,"height":0,"name":"","label":"Command","format":"{{msg.command}}","layout":"col-center","className":"","x":850,"y":540,"wires":[]},{"id":"6ce8c9dc849ab490","type":"debug","z":"81bd34be2fa46898","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":830,"y":500,"wires":[]},{"id":"9efbef26f37a9e34","type":"comment","z":"81bd34be2fa46898","name":"DevUpgradeImageReq command (0x04)","info":"","x":380,"y":620,"wires":[]},{"id":"95a26fa3f95c6aa6","type":"ui_text","z":"81bd34be2fa46898","d":true,"group":"b1aa0fd51e29c482","order":2,"width":0,"height":0,"name":"","label":"Command","format":"{{msg.payload}}","layout":"col-center","className":"","x":730,"y":660,"wires":[]},{"id":"d5a7af7a1bbb8487","type":"ui_template","z":"81bd34be2fa46898","d":true,"group":"b1aa0fd51e29c482","name":"Info","order":1,"width":0,"height":0,"format":"<!DOCTYPE html>\n<html>\n<!--<head>-->\n<!--\t<title>Hello</title>-->\n\n<!--\t<h1>Hello World</h1>-->\n<!--</head>-->\n<body>\n    \n<p><em>Payload is fixed</em></p>\n\n</body>\n</html>\n","storeOutMessages":false,"fwdInMessages":false,"resendOnRefresh":false,"templateScope":"local","className":"","x":270,"y":660,"wires":[[]]},{"id":"117594431e79b207","type":"inject","z":"81bd34be2fa46898","name":"04","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"04","payloadType":"str","x":430,"y":660,"wires":[["95a26fa3f95c6aa6"]]},{"id":"4fb5749cb9a3f356","type":"comment","z":"81bd34be2fa46898","name":"DevDeleteImageReq command (0x05)","info":"","x":370,"y":720,"wires":[]},{"id":"399da3cdfdc75fbb","type":"ui_text","z":"81bd34be2fa46898","d":true,"group":"fbb76d42a154c14f","order":2,"width":0,"height":0,"name":"","label":"Command","format":"{{msg.payload}}","layout":"col-center","className":"","x":730,"y":760,"wires":[]},{"id":"15681d049dd71e0e","type":"ui_template","z":"81bd34be2fa46898","d":true,"group":"fbb76d42a154c14f","name":"Info","order":1,"width":0,"height":0,"format":"<!DOCTYPE html>\n<html>\n<!--<head>-->\n<!--\t<title>Hello</title>-->\n\n<!--\t<h1>Hello World</h1>-->\n<!--</head>-->\n<body>\n    \n<p><em>Payload is fixed</em></p>\n\n</body>\n</html>\n","storeOutMessages":false,"fwdInMessages":false,"resendOnRefresh":false,"templateScope":"local","className":"","x":270,"y":760,"wires":[[]]},{"id":"222085cd8cdf8c09","type":"inject","z":"81bd34be2fa46898","name":"04","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"04","payloadType":"str","x":430,"y":760,"wires":[["399da3cdfdc75fbb"]]},{"id":"1421a57501b60b42","type":"mqtt out","z":"81bd34be2fa46898","name":"Publisher","topic":"","qos":"2","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"0b5f9950f773f2db","x":720,"y":940,"wires":[]},{"id":"1d56b363cd2daecc","type":"function","z":"81bd34be2fa46898","name":"JSON downlink setup","func":"/*\n* Title:    Fragmentation - Downlink Setup\n* Autor:    Antoine AUGAGNEUR\n* Date:     march, 2022\n* Sources:  --\n*\n*/\n\n//!\\\\ topic and paylaod only correct for ThingPark Community NS //!\\\\\n\n// Get values of the form\nvar command = msg.payload.thepayload;                           \nvar deveui = msg.payload.deveui;                                \nvar port = msg.payload.theport;                                    \n\n// Creation of the topic\n// (topic example below is specific to ThingPark Community NS)\nvar topic = \"mqtt/things/\" + deveui + \"/downlink\";              //!\\\\ set your own topic\n\n// Creation of the variable to return\nvar P=\n{\n    \"topic\": topic,             \n}\n\nP.payload =                                                     //!\\\\ set your own payload format\n{\n\t\"DevEUI_downlink\": {\n\t\t\"DevEUI\": deveui,\n\t\t\"FPort\": port,\n\t\t\"payload_hex\": command,\n\t\t\"Confirmed\": \"0\",\n\t\t\"FlushDownlinkQueue\": \"1\"    \n\t}\n\t\n}\n\n\nmsg=P;\nreturn msg;\n\n\n\n\n\n\n\n\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":460,"y":940,"wires":[["1421a57501b60b42"]]},{"id":"73dc73e3e67ab5ce","type":"ui_form","z":"81bd34be2fa46898","name":"Downlink","label":"","group":"b44a77b7e4c1f3cf","order":1,"width":0,"height":0,"options":[{"label":"DevEUI","value":"deveui","type":"text","required":true,"rows":null},{"label":"Port","value":"theport","type":"text","required":true,"rows":null},{"label":"Payload","value":"thepayload","type":"text","required":true,"rows":null}],"formValue":{"deveui":"","theport":"","thepayload":""},"payload":"","submit":"SEND","cancel":"cancel","topic":"topic","topicType":"msg","splitLayout":"","className":"","x":280,"y":940,"wires":[["1d56b363cd2daecc"]]},{"id":"6dad524580205342","type":"comment","z":"81bd34be2fa46898","name":"Downlink","info":"","x":280,"y":900,"wires":[]},{"id":"d0ab8187a8f66f11","type":"mqtt in","z":"81bd34be2fa46898","name":"Subscriber","topic":"","qos":"2","datatype":"json","broker":"0b5f9950f773f2db","nl":false,"rap":false,"inputs":1,"x":520,"y":1100,"wires":[["b6512ed4b88c1c8a","f493fd977d11d9b7","651060deeae3f2cd","18e8660a8717a865","c53596e4534fbc27"]]},{"id":"925657e633884380","type":"inject","z":"81bd34be2fa46898","name":"Topic to subscribe","props":[{"p":"action","v":"subscribe","vt":"str"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"mqtt/things/+/uplink","x":330,"y":1100,"wires":[["d0ab8187a8f66f11"]]},{"id":"165bbcdccbaba301","type":"comment","z":"81bd34be2fa46898","name":"Uplink listening","info":"","x":300,"y":1060,"wires":[]},{"id":"b6512ed4b88c1c8a","type":"function","z":"81bd34be2fa46898","name":"Uplink study","func":"/*\n* Title:    Fragmentation - Uplink analyzer\n* Autor:    Antoine AUGAGNEUR\n* Date:     may, 2022\n* Sources:  > LoRaWAN® Firmware Management Protocol Specification TS006-1.0.0\n*\n*/\n\n// Uplink analysis\n//DevEUI = msg.payload.DevEUI_uplink.DevEUI;              //!\\\\ set your own path\nvar upport = msg.payload.DevEUI_uplink.FPort;               //!\\\\ set your own path\n//Fcnt = msg.payload.DevEUI_uplink.FCntUp;                //!\\\\ set your own path\nvar message = msg.payload.DevEUI_uplink.payload_hex;        //!\\\\ set your own path\n\n\n\n// Clock command analysis\nif (upport == \"203\"){\n    \n    message = message.toString('hex');\n    \n// ----------------------------------------------------------------------------------------------------------------------------\n    if (message[1] == \"0\"){\n        msg.commandtype = \"PackageVersionAns \";\n        msg.analysis = \"Pack.ID: \" + message[2] + message[3] + \" / \" + \"Pack.Ver: \" +message[4] + message[5];\n    }\n// ----------------------------------------------------------------------------------------------------------------------------\n    else if(message[1] == \"1\"){\n        msg.commandtype = \"DevVersionAns\";\n        \n        // FW Version (4-bytes)\n        fwversion = message[8] + message[9]+ message[6]+ message[7] + message[4] + message[5]+ message[2]+ message[3];\n        // HW Version (4-bytes)\n        hwversion = message[16] + message[17]+ message[14]+ message[15] + message[12] + message[13]+ message[10]+ message[11];\n        \n        msg.analysis = \" FW version: \" + fwversion + \" / HW version: \" + hwversion;\n        \n    }\n// ----------------------------------------------------------------------------------------------------------------------------\n    else if(message[1] == \"2\"){\n        msg.commandtype = \"DevRebootTimeAns\";\n        \n        // Reboot Time (4-bytes)\n        var answer = message[8] + message[9]+ message[6]+ message[7] + message[4] + message[5]+ message[2]+ message[3];\n        \n        // error\n        if (answer == \"00000000\"){\n            msg.analysis = \"Error. Reboot request aborted.\"\n        }\n        // ack of the cancel request\n        else if (answer == \"ffffffff\" || answer == \"FFFFFFFF\"){\n            msg.analysis = \"The programmed reboot has been canceled.\"\n        }\n        else{\n            nbsec = parseInt(answer,16);\n            \n            var hours = Math.floor(nbsec / 3600);\n            var minutes = Math.floor((nbsec - hours * 3600)/60);\n            var seconds = nbsec - minutes * 60 - hours*3600;\n            msg.analysis = \"The end-device will reboot in \" + hours + \"H\" + minutes + \"min\" + seconds + \"sec\";\n        }\n        \n    }\n// ----------------------------------------------------------------------------------------------------------------------------\n    else if(message[1] == \"3\"){\n        msg.commandtype = \"DevRebootCountdownAns\";\n        \n        // Reboot Time (3-bytes)\n        var answer2 = message[6] + message[7] + message[4] + message[5]+ message[2]+ message[3];\n        \n        // error\n        if (answer2 == \"000000\"){\n            msg.analysis = \"Error. Reboot request aborted.\"\n        }\n        // ack of the cancel request\n        else if (answer2 == \"ffffff\" || answer2 == \"FFFFFF\"){\n            msg.analysis = \"The programmed reboot has been canceled.\"\n        }\n        else{\n            var nbsec2 = parseInt(answer2,16);\n            \n            var hours2 = Math.floor(nbsec2 / 3600);\n            var minutes2 = Math.floor((nbsec2 - hours2 * 3600)/60);\n            var seconds2 = nbsec2 - minutes2 * 60 - hours2*3600;\n            // msg.analysis = nbsec2 + \" -- \" + answer2\n            msg.analysis = \"The end-device will reboot in \" + hours2 + \"H\" + minutes2 + \"min\" + seconds2 + \"sec\";\n        }\n        }\n    // ----------------------------------------------------------------------------------------------------------------------------\n    else if(message[1] == \"4\"){\n        msg.commandtype = \"DevUpgradeImageAns\";\n        \n        // Status (1-byte)\n        // RFU (7:2) - UpImageStatus (1:0)\n        UpImageStatus = message[2] + message[3];\n        \n        if (UpImageStatus == \"00\"){\n            msg.analysis = \"No firmware upgrade image currently present.\"\n        }\n        else if (UpImageStatus == \"01\"){\n            msg.analysis = \"A firmware upgrade image is present but is either corrupted or its cryptographic signature is wrong.\"\n        }\n        else if (UpImageStatus == \"02\"){\n            msg.analysis = \"An authenticated firmware upgrade image is present but does not correspond to the end-device’s hardware platform.\"\n        }\n        else if (UpImageStatus == \"03\"){\n            msg.analysis = \"A valid firmware upgrade image is present and can be installed.\"\n        }\n        else{\n            //\n        }\n        \n        // if UpImageStatus = 3, the The nextFirmwareVersion field SHALL be present (4-bytes)\n        }\n        \n    // ----------------------------------------------------------------------------------------------------------------------------\n    else if(message[1] == \"5\"){\n        msg.commandtype = \"DevDeleteImageAns\";\n        \n        // Status (1-byte)\n        Status = message[2] + message[3];\n        \n        if (Status == \"00\"){\n            msg.analysis = \"No error occurs.\"\n        }\n        else if (Status == \"01\"){\n            msg.analysis = \"ErrorNoValidImage. No valid firmware upgrade image stored. \"\n        }\n        else if (Status == \"02\"){\n            msg.analysis = \"ErrorInvalidVersion. Version specified does not match the version of the valid firmware stored.\"\n        }\n        else if (Status == \"03\"){\n            msg.analysis = \"ErrorNoValidImage & ErrorInvalidVersion.\"\n        }\n        else{\n            //\n        }\n        \n        }\n    \n// ----------------------------------------------------------------------------------------------------------------------------\n    else{\n        msg.commandtype = \"...\";\n        msg.analysis = \"...\";\n    }\n    \n}\nelse if (upport == \"186\"){\n    message = message.toString('hex');\n    if (message[3] == \"1\"){\n        msg.commandtype = \"User command\";\n        msg.analysis = \"The end-device signals the data block has been completely received (no need of further coded fragments)\";\n    }\n    \n}\nelse{\n    msg.commandtype = \"...\";\n    msg.analysis = \"...\";\n}\n\n\n\nreturn msg;\n\n\n\n\n\n\n\nfunction hex2bin(hex,nboctet){\n    var bin;\n    if (nboctet == 1){\n        bin = (\"00000000\" + (parseInt(hex, 16)).toString(2)).substr(-8);\n    }\n    else if (nboctet == 2){\n        bin = (\"0000000000000000\" + (parseInt(hex, 16)).toString(2)).substr(-16);\n    }\n    return bin;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":670,"y":1220,"wires":[["bf026a8d25ba7a3b","061b21b29e5dcf2b"]]},{"id":"f493fd977d11d9b7","type":"ui_text","z":"81bd34be2fa46898","group":"fe9bc955bc0c7061","order":1,"width":7,"height":1,"name":"","label":"DevEUI","format":"{{msg.payload.DevEUI_uplink.DevEUI}}","layout":"row-spread","className":"","x":840,"y":1100,"wires":[]},{"id":"651060deeae3f2cd","type":"ui_text","z":"81bd34be2fa46898","group":"fe9bc955bc0c7061","order":4,"width":7,"height":1,"name":"","label":"Port","format":"{{msg.payload.DevEUI_uplink.FPort}}","layout":"row-spread","className":"","x":850,"y":1140,"wires":[]},{"id":"18e8660a8717a865","type":"ui_text","z":"81bd34be2fa46898","group":"fe9bc955bc0c7061","order":3,"width":7,"height":1,"name":"","label":"Fcnt","format":"{{msg.payload.DevEUI_uplink.FCntUp}}","layout":"row-spread","className":"","x":870,"y":1180,"wires":[]},{"id":"bf026a8d25ba7a3b","type":"ui_text","z":"81bd34be2fa46898","group":"fe9bc955bc0c7061","order":2,"width":7,"height":2,"name":"","label":"Command type","format":"{{msg.commandtype}}","layout":"col-center","className":"","x":960,"y":1260,"wires":[]},{"id":"061b21b29e5dcf2b","type":"ui_text","z":"81bd34be2fa46898","group":"fe9bc955bc0c7061","order":5,"width":7,"height":2,"name":"","label":"Command analysis","format":"{{msg.analysis}}","layout":"col-center","className":"","x":1010,"y":1300,"wires":[]},{"id":"c53596e4534fbc27","type":"ui_text","z":"81bd34be2fa46898","group":"fe9bc955bc0c7061","order":6,"width":7,"height":1,"name":"","label":"Payload","format":"{{msg.payload.DevEUI_uplink.payload_hex}}","layout":"row-spread","className":"","x":900,"y":1220,"wires":[]},{"id":"af7a0596162b9b18","type":"inject","z":"81bd34be2fa46898","name":"RAZ","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payloadType":"str","x":690,"y":1280,"wires":[["f493fd977d11d9b7","651060deeae3f2cd","18e8660a8717a865","c53596e4534fbc27","bf026a8d25ba7a3b","061b21b29e5dcf2b"]]},{"id":"f347512d0d6e3295","type":"ui_group","name":"PackageVersionReq","tab":"16c6b620c6d7e9ea","order":3,"disp":true,"width":7,"collapse":false,"className":""},{"id":"7aa3ceccb60a7961","type":"ui_group","name":"DevVersionReq","tab":"16c6b620c6d7e9ea","order":4,"disp":true,"width":7,"collapse":false,"className":""},{"id":"54f20a3bf36f1681","type":"ui_group","name":"DevRebootTimeReq","tab":"16c6b620c6d7e9ea","order":1,"disp":true,"width":14,"collapse":false,"className":""},{"id":"4d16af22a6324b77","type":"ui_group","name":"DevRebootCountdownReq","tab":"16c6b620c6d7e9ea","order":2,"disp":true,"width":14,"collapse":false,"className":""},{"id":"b1aa0fd51e29c482","type":"ui_group","name":"DevUpgradeImageReq","tab":"16c6b620c6d7e9ea","order":5,"disp":true,"width":7,"collapse":false,"className":""},{"id":"fbb76d42a154c14f","type":"ui_group","name":"DevDeleteImageReq","tab":"16c6b620c6d7e9ea","order":6,"disp":true,"width":7,"collapse":false,"className":""},{"id":"0b5f9950f773f2db","type":"mqtt-broker","name":"Mosquitto ONLINE","broker":"test.mosquitto.org","port":"1883","clientid":"","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"sessionExpiry":""},{"id":"b44a77b7e4c1f3cf","type":"ui_group","name":"Downlink (Port: 203)","tab":"16c6b620c6d7e9ea","order":7,"disp":true,"width":"7","collapse":false,"className":""},{"id":"fe9bc955bc0c7061","type":"ui_group","name":"Uplink","tab":"16c6b620c6d7e9ea","order":8,"disp":true,"width":"14","collapse":false,"className":""},{"id":"16c6b620c6d7e9ea","type":"ui_tab","name":"FUOTA","icon":"dashboard","order":12,"disabled":false,"hidden":false}]