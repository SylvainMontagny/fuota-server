[
    {
        "id": "878c1b610dbcdd8a",
        "type": "tab",
        "label": "Clock Synchronization Dashboard (TTN)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "83a5ba14b10ffc6f",
        "type": "comment",
        "z": "878c1b610dbcdd8a",
        "name": "ForceDeviceResyncReq command (0x0301)",
        "info": "",
        "x": 270,
        "y": 380,
        "wires": []
    },
    {
        "id": "a4c775366a5a7e7e",
        "type": "ui_template",
        "z": "878c1b610dbcdd8a",
        "d": true,
        "group": "f14e6dc3cafbf683",
        "name": "Info",
        "order": 1,
        "width": 10,
        "height": "14",
        "format": "<!DOCTYPE html>\n<html>\n<!--<head>-->\n<!--\t<title>Hello</title>-->\n\n<!--\t<h1>Hello World</h1>-->\n<!--</head>-->\n<body>\n\n<p><strong>CLOCK SYNCHRONIZATION OBJECTIVES</strong></p>\n<p>The main goal is to synchronize the real-time clock of an end-device to the network&rsquo;s GPS clock with second accuracy.</p>\n<p>&nbsp;</p>\n\n<p><strong>DASHBOARD PRESENTATION</strong></p>\n<p>This dashboard proposes different commands from the LoRaWAN Application Layer Clock Synchronization. Explanation and commands are from:</p>\n<p><a href=\"https://resources.lora-alliance.org/technical-specifications/lorawan-application-layer-clock-synchronization-specification-v1-0-0\">LoRaWAN&reg; Application Layer Clock Synchronization Specification v1.0.0 (lora-alliance.org)</a></p>\n\n<p>This dashboard offers different commands:</p>\n\n<ul>\n<li><u>PackageVersionReq</u> (CID: 0x00)</li>\n</ul>\n<p>Used by the AS to request the package version implemented by the end-device</p>\n<ul>\n<li><u>DeviceAppTimePeriodicityReq</u> (CID: 0x02)</li>\n</ul>\n<p>Used by the application server for 2 purposes: Set the periodicity at which the end[1]device shall transmit AppTimeReq messages and request an immediate transmission of end-device time.</p>\n<ul>\n<li><u>ForceDeviceResyncReq</u> (CID: 0x03)</li>\n</ul>\n<p>Used by the application server to the end-device to trigger a clock resynchronization.</p>\n<p>&nbsp;</p>\n<p><strong>USMB DOCUMENTATION</strong></p>\n<p>For more information about the Clock Synchronization feature, check:</p>\n<p><a href=\"https://www.univ-smb.fr/lorawan/en/free-book/\">USMB Documentation</a></p>\n\n\n\n</body>\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 530,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "6e254f8ee5ead968",
        "type": "comment",
        "z": "878c1b610dbcdd8a",
        "name": "PackageVersionReq  command (0x00)",
        "info": "",
        "x": 250,
        "y": 140,
        "wires": []
    },
    {
        "id": "81a8dbda8f06e117",
        "type": "comment",
        "z": "878c1b610dbcdd8a",
        "name": "DeviceAppTimePeriodicityReq  command (0x02..)",
        "info": "",
        "x": 280,
        "y": 260,
        "wires": []
    },
    {
        "id": "990c23644ddd6ada",
        "type": "mqtt out",
        "z": "878c1b610dbcdd8a",
        "name": "Publisher",
        "topic": "",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5cc03a24c554a8a0",
        "x": 620,
        "y": 540,
        "wires": []
    },
    {
        "id": "c23ee9626c839cb6",
        "type": "function",
        "z": "878c1b610dbcdd8a",
        "name": "JSON downlink setup",
        "func": "/*\n* Title:    Clock Synchronization - Downlink Setup\n* Autor:    Anthony Biard\n* Date:     may, 2023\n* Sources:  --\n*\n*/\n\nvar topic_actility = \"mqtt/things/\" + deveui + \"/downlink\";\n\nvar network = global.get('network');\nvar gateway = global.get('gateway');\nvar application_id_ttn = global.get('application_id_ttn');\nvar device_id_ttn = global.get('device_id_ttn');\nvar topic_ttn_downlink_device = \"v3/\" + application_id_ttn + \"/devices/\" + device_id_ttn + \"/down/replace\";\nvar topic_ttn_downlink_multicast = \"v3/\" + application_id_ttn + \"/devices/\" + device_id_ttn + \"/down/replace\";\n\n\n// Get values of the form\nvar command = hexToBase64(msg.payload.thepayload);                           \nvar deveui = msg.payload.deveui;                                \nvar port = msg.payload.port;                                 \n\nfunction hexToBase64(hexString) {\n    // Conversion de la chaîne hexadécimale en un tableau d'octets\n    const bytes = Buffer.from(hexString, 'hex');\n\n    // Conversion des octets en base64\n    const base64String = bytes.toString('base64');\n\n    return base64String;\n}\n\nif (network == \"ttn\") {\n        /**** Downlink to a device ***/\n        msg =\n        {\n            topic: topic_ttn_downlink_device,\n\n            payload: {\n                'downlinks': [{\n                    \"f_port\": port,\n                    \"frm_payload\": command,\n                    \"priority\": \"NORMAL\"\n                }]\n            }\n        }\n}\n\n\nif (network == \"actility\") {\n    msg =\n    {\n        payload: {\n            \"DevEUI_downlink\": {\n                \"DevEUI\": deveui,\n                \"FPort\": port,\n                \"payload_hex\": command,\n                \"Confirmed\": \"0\",\n                \"FlushDownlinkQueue\": \"1\"\n            }\n        }\n    }\n}\n\nreturn msg;\n\n\n\n\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 540,
        "wires": [
            [
                "990c23644ddd6ada"
            ]
        ]
    },
    {
        "id": "c2db9d56b0c12069",
        "type": "ui_form",
        "z": "878c1b610dbcdd8a",
        "name": "Downlink",
        "label": "",
        "group": "04058b639f2e0be9",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Port",
                "value": "port",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Payload",
                "value": "thepayload",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "port": "",
            "thepayload": ""
        },
        "payload": "",
        "submit": "SEND",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 160,
        "y": 540,
        "wires": [
            [
                "c23ee9626c839cb6",
                "7975e68f990f6a5a"
            ]
        ]
    },
    {
        "id": "80a4ea592eb6fa47",
        "type": "comment",
        "z": "878c1b610dbcdd8a",
        "name": "Downlink",
        "info": "",
        "x": 160,
        "y": 500,
        "wires": []
    },
    {
        "id": "f196c914275a8365",
        "type": "ui_text",
        "z": "878c1b610dbcdd8a",
        "group": "ff96af57077bef54",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Command",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 510,
        "y": 180,
        "wires": []
    },
    {
        "id": "708dd09af2c1a2cb",
        "type": "ui_text",
        "z": "878c1b610dbcdd8a",
        "group": "c08e65067aa920d3",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Command",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 530,
        "y": 420,
        "wires": []
    },
    {
        "id": "f6b7dfee76e9424d",
        "type": "ui_dropdown",
        "z": "878c1b610dbcdd8a",
        "name": "",
        "label": "Period",
        "tooltip": "",
        "place": "Select option",
        "group": "37be4983fabb0fb2",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "2 min",
                "value": "0200",
                "type": "str"
            },
            {
                "label": "4 min",
                "value": "0201",
                "type": "str"
            },
            {
                "label": "8 min",
                "value": "0202",
                "type": "str"
            },
            {
                "label": "17 min",
                "value": "0203",
                "type": "str"
            },
            {
                "label": "34 min",
                "value": "0204",
                "type": "str"
            },
            {
                "label": "1 hour",
                "value": "0205",
                "type": "str"
            },
            {
                "label": "2 hours",
                "value": "0206",
                "type": "str"
            },
            {
                "label": "4 hours",
                "value": "0207",
                "type": "str"
            },
            {
                "label": "9 hours",
                "value": "0208",
                "type": "str"
            },
            {
                "label": "18 hours",
                "value": "0209",
                "type": "str"
            },
            {
                "label": "1 day",
                "value": "020A",
                "type": "str"
            },
            {
                "label": "3 days",
                "value": "020B",
                "type": "str"
            },
            {
                "label": "6 days",
                "value": "020C",
                "type": "str"
            },
            {
                "label": "12 days",
                "value": "020D",
                "type": "str"
            },
            {
                "label": "24 days",
                "value": "020E",
                "type": "str"
            },
            {
                "label": "48 days",
                "value": "020F",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 150,
        "y": 300,
        "wires": [
            [
                "6401aba847672a3e"
            ]
        ]
    },
    {
        "id": "6401aba847672a3e",
        "type": "ui_text",
        "z": "878c1b610dbcdd8a",
        "group": "37be4983fabb0fb2",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Command",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 410,
        "y": 300,
        "wires": []
    },
    {
        "id": "822375f4bf21a1fb",
        "type": "ui_template",
        "z": "878c1b610dbcdd8a",
        "group": "ff96af57077bef54",
        "name": "Info",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html>\n<!--<head>-->\n<!--\t<title>Hello</title>-->\n\n<!--\t<h1>Hello World</h1>-->\n<!--</head>-->\n<body>\n    \n<p><em>Payload is fixed</em></p>\n\n</body>\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 150,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "8637c59d730aff9e",
        "type": "inject",
        "z": "878c1b610dbcdd8a",
        "name": "00",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "00",
        "payloadType": "str",
        "x": 310,
        "y": 180,
        "wires": [
            [
                "f196c914275a8365"
            ]
        ]
    },
    {
        "id": "2648916b9b665386",
        "type": "ui_template",
        "z": "878c1b610dbcdd8a",
        "group": "c08e65067aa920d3",
        "name": "Info",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<!DOCTYPE html>\n<html>\n<!--<head>-->\n<!--\t<title>Hello</title>-->\n\n<!--\t<h1>Hello World</h1>-->\n<!--</head>-->\n<body>\n    \n<p><em>Payload is fixed</em></p>\n\n</body>\n</html>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 150,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "87722584894678ba",
        "type": "inject",
        "z": "878c1b610dbcdd8a",
        "name": "0301",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0301",
        "payloadType": "str",
        "x": 310,
        "y": 420,
        "wires": [
            [
                "708dd09af2c1a2cb"
            ]
        ]
    },
    {
        "id": "07922ae6580e8b30",
        "type": "mqtt in",
        "z": "878c1b610dbcdd8a",
        "name": "Subscriber",
        "topic": "",
        "qos": "2",
        "datatype": "json",
        "broker": "5cc03a24c554a8a0",
        "nl": false,
        "rap": false,
        "inputs": 1,
        "x": 240,
        "y": 760,
        "wires": [
            [
                "e0373a3fc7cd9836"
            ]
        ]
    },
    {
        "id": "a109de17ddb613a3",
        "type": "comment",
        "z": "878c1b610dbcdd8a",
        "name": "Uplink listening",
        "info": "",
        "x": 180,
        "y": 700,
        "wires": []
    },
    {
        "id": "e0373a3fc7cd9836",
        "type": "function",
        "z": "878c1b610dbcdd8a",
        "name": "Uplink analyser",
        "func": "\n\nfunction base64ToHex(base64String) {\n    // Conversion de la chaîne Base64 en un objet Buffer\n    const buffer = Buffer.from(base64String, 'base64');\n\n    // Conversion du buffer en une chaîne hexadécimale\n    const hexString = buffer.toString('hex');\n\n    return hexString;\n}\n\n\nvar upport = msg.payload.uplink_message.f_port;\nvar message = base64ToHex(msg.payload.uplink_message.frm_payload);\nmsg.payload.uplink_message.frm_payload = base64ToHex(msg.payload.uplink_message.frm_payload);\n\n\nif (upport == \"202\") {\n\n    message = message.toString('hex');\n\n    if (message[1] == \"0\") {\n        msg.commandtype = \"PackageVersionAns \";\n        msg.analysis = \"Pack.ID: \" + message[2] + message[3] + \" / \" + \"Pack.Ver: \" + message[4] + message[5];\n    }\n    else if (message[1] == \"2\") {\n        msg.commandtype = \"DeviceAppTimePeriodicityAns \";\n        var thedate2 = SecToDate_2(message);\n        msg.analysis = thedate2;\n    }\n    else if (message[1] == \"1\") {\n        msg.commandtype = \"AppTimeReq\";\n        var thedate1 = SecToDate_1(message);\n        msg.analysis = thedate1;\n    }\n    else {\n        msg.commandtype = \"...\";\n        msg.analysis = \"...\";\n    }\n\n}\nelse {\n    msg.commandtype = \"...\";\n    msg.analysis = \"...\";\n}\n\nreturn msg;\n\n\n// Get time and convert it into date format\nfunction SecToDate_1(message) {\n\n\n    var DeviceTime = message[8]\n        + message[9]\n        + message[6]\n        + message[7]\n        + message[4]\n        + message[5]\n        + message[2]\n        + message[3];\n    var DeviceTime_hex = DeviceTime.toString('hex');\n    var DeviceTime_dec = parseInt(DeviceTime_hex, 16);  // sec passed since 06-janv-1980\n    var DeviceTime_date = new Date(1980, 0, 6);                        // Epoch\n    DeviceTime_date.setSeconds(DeviceTime_dec);\n    let DeviceTime_date_format = DeviceTime_date.toLocaleString('fr-FR', {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric'\n    });\n\n    DeviceTime_date_format += \" (UTC+0)\";\n\n    return DeviceTime_date_format;\n\n}\n\n// Get time and convert it into date format\nfunction SecToDate_2(message) {\n\n\n    var DeviceTime = message[10]\n        + message[11]\n        + message[8]\n        + message[9]\n        + message[6]\n        + message[7]\n        + message[4]\n        + message[5];\n    var DeviceTime_hex = DeviceTime.toString('hex');\n    var DeviceTime_dec = parseInt(DeviceTime_hex, 16);  // sec passed since 06-janv-1980\n    var DeviceTime_date = new Date(1980, 0, 6);                        // Epoch\n    DeviceTime_date.setSeconds(DeviceTime_dec);\n    let DeviceTime_date_format = DeviceTime_date.toLocaleString('fr-FR', {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric'\n    });\n\n    DeviceTime_date_format += \" (UTC+0)\";\n\n    return DeviceTime_date_format;\n\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 760,
        "wires": [
            [
                "e0b72d5f7328d274",
                "2126cb92b5797d55",
                "0414e7138db483d5",
                "24e3fce73b4b6b19",
                "4933ed74c1337939",
                "3774c5746c786918"
            ]
        ]
    },
    {
        "id": "24e3fce73b4b6b19",
        "type": "ui_text",
        "z": "878c1b610dbcdd8a",
        "group": "f2638f8872d9a71f",
        "order": 1,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Device ID",
        "format": "{{payload.end_device_ids.device_id}}",
        "layout": "row-spread",
        "className": "",
        "x": 700,
        "y": 660,
        "wires": []
    },
    {
        "id": "4933ed74c1337939",
        "type": "ui_text",
        "z": "878c1b610dbcdd8a",
        "group": "f2638f8872d9a71f",
        "order": 4,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Port",
        "format": "{{msg.payload.uplink_message.f_port}}",
        "layout": "row-spread",
        "className": "",
        "x": 710,
        "y": 700,
        "wires": []
    },
    {
        "id": "3774c5746c786918",
        "type": "ui_text",
        "z": "878c1b610dbcdd8a",
        "group": "f2638f8872d9a71f",
        "order": 3,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Fcnt",
        "format": "{{msg.payload.uplink_message.f_cnt}}",
        "layout": "row-spread",
        "className": "",
        "x": 730,
        "y": 740,
        "wires": []
    },
    {
        "id": "e0b72d5f7328d274",
        "type": "ui_text",
        "z": "878c1b610dbcdd8a",
        "group": "f2638f8872d9a71f",
        "order": 2,
        "width": "4",
        "height": 2,
        "name": "",
        "label": "Command type",
        "format": "{{msg.commandtype}}",
        "layout": "col-center",
        "className": "",
        "x": 800,
        "y": 820,
        "wires": []
    },
    {
        "id": "2126cb92b5797d55",
        "type": "ui_text",
        "z": "878c1b610dbcdd8a",
        "group": "f2638f8872d9a71f",
        "order": 5,
        "width": "4",
        "height": 2,
        "name": "",
        "label": "Command analysis",
        "format": "{{msg.analysis}}",
        "layout": "col-center",
        "className": "",
        "x": 830,
        "y": 860,
        "wires": []
    },
    {
        "id": "0414e7138db483d5",
        "type": "ui_text",
        "z": "878c1b610dbcdd8a",
        "group": "f2638f8872d9a71f",
        "order": 6,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Payload",
        "format": "{{msg.payload.uplink_message.frm_payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 760,
        "y": 780,
        "wires": []
    },
    {
        "id": "557c8da136d1e656",
        "type": "inject",
        "z": "878c1b610dbcdd8a",
        "name": "RAZ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 550,
        "y": 860,
        "wires": [
            [
                "24e3fce73b4b6b19",
                "4933ed74c1337939",
                "3774c5746c786918",
                "e0b72d5f7328d274",
                "2126cb92b5797d55",
                "0414e7138db483d5"
            ]
        ]
    },
    {
        "id": "a6ef42d28c7a1950",
        "type": "comment",
        "z": "878c1b610dbcdd8a",
        "d": true,
        "name": "Clock Synchronization management tool - USMB",
        "info": "",
        "x": 280,
        "y": 60,
        "wires": []
    },
    {
        "id": "01c6fabed3e8518d",
        "type": "link in",
        "z": "878c1b610dbcdd8a",
        "name": "MQTT configuration in",
        "links": [
            "728e4479a2eccdd2",
            "f079866a52cf1df9"
        ],
        "x": 115,
        "y": 760,
        "wires": [
            [
                "07922ae6580e8b30"
            ]
        ]
    },
    {
        "id": "7975e68f990f6a5a",
        "type": "function",
        "z": "878c1b610dbcdd8a",
        "name": "Persistance",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 580,
        "wires": [
            [
                "c2db9d56b0c12069"
            ]
        ]
    },
    {
        "id": "f14e6dc3cafbf683",
        "type": "ui_group",
        "name": "Application Layer Clock Synchronization",
        "tab": "809d5550849b871e",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5cc03a24c554a8a0",
        "type": "mqtt-broker",
        "name": "Broker",
        "broker": "",
        "port": "1883",
        "clientid": "",
        "autoConnect": false,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "04058b639f2e0be9",
        "type": "ui_group",
        "name": "Downlink(port 202)",
        "tab": "809d5550849b871e",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ff96af57077bef54",
        "type": "ui_group",
        "name": "PackageVersionReq",
        "tab": "809d5550849b871e",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c08e65067aa920d3",
        "type": "ui_group",
        "name": "ForceDeviceResyncReq",
        "tab": "809d5550849b871e",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "37be4983fabb0fb2",
        "type": "ui_group",
        "name": "DeviceAppTimePeriodicityReq ",
        "tab": "809d5550849b871e",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f2638f8872d9a71f",
        "type": "ui_group",
        "name": "Last Uplink",
        "tab": "809d5550849b871e",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "809d5550849b871e",
        "type": "ui_tab",
        "name": "Clock synchronization ",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    }
]